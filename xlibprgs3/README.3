BUILD INSTRUCTIONS

You may need to recreate the Makefile to
generate one that will work on your system.

To rebuild the Makefile under R4, using already installed
R4 libraries, use xmkmf as follows:

xmkmf

If the R4 libraries are still installed in the X source tree, use:

xmkmf TOP

where TOP is the full path of the mit directory of your X distribution
sources.

Alternately, use the ximake.sh shell script provided
in the TOP/util/scripts directory, something like the following:

TOP/util/scripts/ximake.sh -i TOP

where TOP is the full path of the mit directory of your X distribution
sources.
To rebuild the Makefile under R4, using already installed
R4 libraries, use xmkmf as follows:

xmkmf

If the R4 libraries are still installed in the X source tree, use:

xmkmf TOP

where TOP is the full path of the mit directory of your X distribution
sources.

Alternately in R4, and always in R3, use the ximake.sh shell script 
provided in the TOP/util/scripts directory, something like the 
following:

TOP/util/scripts/ximake.sh -i TOP

where TOP is the full path of the mit directory of your X distribution
sources.
Without the -i flag, the Makefile will use libraries and include
files in the X source tree.  This will only work if you have compiled 
the Core distribution from sources and have not yet cleaned out all 
the object files and libraries from the source tree.  Many 
people clean out these files after installing the executables and 
libraries in order to make disk space for compiling things in contrib.
So normally you want to use -i, or xmkmf alone.

If you want to compile the programs under R3, use the following command
when you start the make:

make DEFINES=-DX11R3

If you want to compile the programs with -g to let you debug using
a debugger such as dbx, use:

make "CC=cc -g"

If you do not have the sources for X, you may not have the
ximake.sh script, and you may not have the configuration files
that \f(CWimake\fP requires.  If this is the case, you can try
the provided default Makefiles, or you can compile manually:

cc -o progname progname.c -lXaw -lXmu -lXt -lX11
